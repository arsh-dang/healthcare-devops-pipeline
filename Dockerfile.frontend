# Use Node.js as base image
FROM node:20-alpine AS build

# Set working directory
WORKDIR /app

# Copy package.json and package-lock.json
COPY package.json pnpm-lock.yaml ./

# Install pnpm
RUN npm install -g pnpm

# Install dependencies
RUN pnpm install

# Copy the rest of the code
COPY public/ public/
COPY src/ src/

# Build the app for production
RUN pnpm build

# Production stage
FROM nginx:1.25.3-alpine

# Copy the build output to replace the default nginx contents
COPY --from=build /app/build /usr/share/nginx/html

# Copy custom nginx config
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Add prestart script executed by official entrypoint
RUN printf '%s\n' \
    '#!/bin/sh' \
    'set -e' \
    'mkdir -p /tmp/nginx_cache/client_temp /tmp/nginx_cache/proxy_temp /tmp/nginx_cache/fastcgi_temp /tmp/nginx_cache/uwsgi_temp /tmp/nginx_cache/scgi_temp' \
    'chown -R nginx:nginx /tmp/nginx_cache' \
    > /docker-entrypoint.d/40-init-nginx-cache.sh && \
    chmod +x /docker-entrypoint.d/40-init-nginx-cache.sh

# Expose port
EXPOSE 3001