apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-advanced-dashboards
  namespace: healthcare-production
data:
  healthcare-app-dashboard.json: |
    {
      "dashboard": {
        "id": null,
        "title": "Healthcare App - Advanced Monitoring",
        "tags": ["healthcare", "microservices"],
        "timezone": "browser",
        "panels": [
          {
            "id": 1,
            "title": "Application Health Overview",
            "type": "stat",
            "targets": [
              {
                "expr": "up{job=\"healthcare-backend\"}",
                "legendFormat": "Backend Status"
              },
              {
                "expr": "up{job=\"healthcare-frontend\"}",
                "legendFormat": "Frontend Status"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": {
                  "mode": "thresholds"
                },
                "thresholds": {
                  "steps": [
                    {"color": "red", "value": 0},
                    {"color": "green", "value": 1}
                  ]
                }
              }
            },
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 0}
          },
          {
            "id": 2,
            "title": "Request Rate (RPS)",
            "type": "graph",
            "targets": [
              {
                "expr": "rate(http_request_total{job=\"healthcare-backend\"}[5m])",
                "legendFormat": "{{method}} {{route}}"
              }
            ],
            "yAxes": [
              {"label": "Requests/sec", "min": 0}
            ],
            "gridPos": {"h": 8, "w": 12, "x": 12, "y": 0}
          },
          {
            "id": 3,
            "title": "Response Time Percentiles",
            "type": "graph",
            "targets": [
              {
                "expr": "histogram_quantile(0.50, rate(http_request_duration_seconds_bucket{job=\"healthcare-backend\"}[5m]))",
                "legendFormat": "50th percentile"
              },
              {
                "expr": "histogram_quantile(0.95, rate(http_request_duration_seconds_bucket{job=\"healthcare-backend\"}[5m]))",
                "legendFormat": "95th percentile"
              },
              {
                "expr": "histogram_quantile(0.99, rate(http_request_duration_seconds_bucket{job=\"healthcare-backend\"}[5m]))",
                "legendFormat": "99th percentile"
              }
            ],
            "yAxes": [
              {"label": "Seconds", "min": 0}
            ],
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 8}
          },
          {
            "id": 4,
            "title": "Error Rate",
            "type": "graph",
            "targets": [
              {
                "expr": "rate(http_request_total{job=\"healthcare-backend\",code=~\"5..\"}[5m]) / rate(http_request_total{job=\"healthcare-backend\"}[5m]) * 100",
                "legendFormat": "Error Rate %"
              }
            ],
            "yAxes": [
              {"label": "Percentage", "min": 0, "max": 100}
            ],
            "gridPos": {"h": 8, "w": 12, "x": 12, "y": 8}
          },
          {
            "id": 5,
            "title": "Database Operations",
            "type": "graph",
            "targets": [
              {
                "expr": "rate(mongodb_op_counters_total[5m])",
                "legendFormat": "{{type}} operations/sec"
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 16}
          },
          {
            "id": 6,
            "title": "Container Resource Usage",
            "type": "graph",
            "targets": [
              {
                "expr": "rate(container_cpu_usage_seconds_total{pod=~\"(frontend|backend).*\"}[5m]) * 100",
                "legendFormat": "{{pod}} CPU %"
              },
              {
                "expr": "container_memory_usage_bytes{pod=~\"(frontend|backend).*\"} / container_spec_memory_limit_bytes * 100",
                "legendFormat": "{{pod}} Memory %"
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 12, "y": 16}
          },
          {
            "id": 7,
            "title": "Business Metrics - Appointments",
            "type": "stat",
            "targets": [
              {
                "expr": "increase(http_request_total{job=\"healthcare-backend\",route=\"/api/appointments\",method=\"POST\"}[1h])",
                "legendFormat": "Appointments Created (1h)"
              },
              {
                "expr": "increase(http_request_total{job=\"healthcare-backend\",route=\"/api/appointments\",method=\"GET\"}[1h])",
                "legendFormat": "Appointments Viewed (1h)"
              }
            ],
            "gridPos": {"h": 8, "w": 24, "x": 0, "y": 24}
          }
        ],
        "time": {
          "from": "now-1h",
          "to": "now"
        },
        "refresh": "5s"
      }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-advanced-rules
  namespace: healthcare-production
data:
  advanced-alerts.yml: |
    groups:
    - name: healthcare.advanced.rules
      interval: 30s
      rules:
      # SLI/SLO based alerts
      - alert: HighErrorRate
        expr: |
          (
            rate(http_request_total{job="healthcare-backend",code=~"5.."}[5m]) /
            rate(http_request_total{job="healthcare-backend"}[5m])
          ) * 100 > 1
        for: 2m
        labels:
          severity: critical
          service: healthcare-backend
          sli: availability
        annotations:
          summary: "High error rate detected"
          description: "Error rate is {{ $value }}% for the last 5 minutes"
          runbook_url: "https://docs.company.com/runbooks/high-error-rate"
      
      - alert: HighLatency
        expr: |
          histogram_quantile(0.95, 
            rate(http_request_duration_seconds_bucket{job="healthcare-backend"}[5m])
          ) > 0.5
        for: 5m
        labels:
          severity: warning
          service: healthcare-backend
          sli: latency
        annotations:
          summary: "High response latency"
          description: "95th percentile latency is {{ $value }}s"
      
      # Business logic alerts
      - alert: LowAppointmentBookingRate
        expr: |
          rate(http_request_total{job="healthcare-backend",route="/api/appointments",method="POST"}[1h]) < 0.1
        for: 30m
        labels:
          severity: warning
          service: healthcare-backend
          type: business
        annotations:
          summary: "Low appointment booking rate"
          description: "Appointment booking rate has dropped below normal levels"
      
      # Infrastructure alerts
      - alert: PodMemoryUsageHigh
        expr: |
          (
            container_memory_usage_bytes{pod=~"(frontend|backend).*"} /
            container_spec_memory_limit_bytes
          ) * 100 > 80
        for: 5m
        labels:
          severity: warning
          service: kubernetes
        annotations:
          summary: "Pod memory usage high"
          description: "Pod {{ $labels.pod }} memory usage is {{ $value }}%"
      
      - alert: PodCPUThrottling
        expr: |
          rate(container_cpu_cfs_throttled_seconds_total{pod=~"(frontend|backend).*"}[5m]) > 0
        for: 2m
        labels:
          severity: warning
          service: kubernetes
        annotations:
          summary: "Pod CPU throttling detected"
          description: "Pod {{ $labels.pod }} is experiencing CPU throttling"
      
      # Database alerts
      - alert: MongoDBSlowQueries
        expr: |
          rate(mongodb_mongod_metrics_operation_total{type="command"}[5m]) > 100
        for: 5m
        labels:
          severity: warning
          service: mongodb
        annotations:
          summary: "MongoDB slow queries detected"
          description: "High number of slow queries detected in MongoDB"
      
      - alert: MongoDBConnectionsHigh
        expr: |
          mongodb_connections{state="current"} / mongodb_connections{state="available"} * 100 > 80
        for: 5m
        labels:
          severity: warning
          service: mongodb
        annotations:
          summary: "MongoDB connections high"
          description: "MongoDB connection usage is {{ $value }}%"
      
      # Predictive alerts
      - alert: DiskSpaceRunningOut
        expr: |
          predict_linear(node_filesystem_avail_bytes{fstype!="tmpfs"}[1h], 4*3600) < 0
        for: 10m
        labels:
          severity: warning
          service: infrastructure
        annotations:
          summary: "Disk space running out"
          description: "Disk space on {{ $labels.device }} will run out in approximately 4 hours"
      
      # Custom business metrics
      - alert: AppointmentDeletionSpike
        expr: |
          rate(http_request_total{job="healthcare-backend",route="/api/appointments",method="DELETE"}[5m]) > 
          rate(http_request_total{job="healthcare-backend",route="/api/appointments",method="DELETE"}[1h]) * 5
        for: 2m
        labels:
          severity: warning
          service: healthcare-backend
          type: business
        annotations:
          summary: "Unusual spike in appointment deletions"
          description: "Appointment deletion rate is 5x higher than normal"
